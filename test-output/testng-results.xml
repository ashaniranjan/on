<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-06T13:50:53 CET" name="Suite" finished-at="2022-03-06T13:52:06 CET" duration-ms="72517">
    <groups>
    </groups>
    <test started-at="2022-03-06T13:50:53 CET" name="Test" finished-at="2022-03-06T13:52:06 CET" duration-ms="72517">
      <class name="SignUpProcess.signUpFlowWithExistingUser">
        <test-method is-config="true" signature="initialize()[pri:0, instance:SignUpProcess.signUpFlowWithExistingUser@7bd7d6d6]" started-at="2022-03-06T13:50:53 CET" name="initialize" finished-at="2022-03-06T13:50:58 CET" duration-ms="5292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="signupNavigationWithExistingUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SignUpProcess.signUpFlowWithExistingUser@7bd7d6d6]" started-at="2022-03-06T13:51:22 CET" name="signupNavigationWithExistingUser" data-provider="getDataofExistingUser" finished-at="2022-03-06T13:51:41 CET" duration-ms="18692" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[afjfskJjlgfssj@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[djhsdjdd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid User]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupNavigationWithExistingUser -->
        <test-method signature="signupNavigationWithExistingUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SignUpProcess.signUpFlowWithExistingUser@7bd7d6d6]" started-at="2022-03-06T13:51:41 CET" name="signupNavigationWithExistingUser" data-provider="getDataofExistingUser" finished-at="2022-03-06T13:51:54 CET" duration-ms="12702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[efg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abdgffcsc@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ashgjjasd]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupNavigationWithExistingUser -->
      </class> <!-- SignUpProcess.signUpFlowWithExistingUser -->
      <class name="SignUpProcess.signUpFlowWithInvalidUser">
        <test-method is-config="true" signature="initialize()[pri:0, instance:SignUpProcess.signUpFlowWithInvalidUser@43f02ef2]" started-at="2022-03-06T13:50:58 CET" name="initialize" finished-at="2022-03-06T13:51:01 CET" duration-ms="2219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="signupNavigationWithInvalidUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SignUpProcess.signUpFlowWithInvalidUser@43f02ef2]" started-at="2022-03-06T13:51:54 CET" name="signupNavigationWithInvalidUser" data-provider="getDataInValidUser" finished-at="2022-03-06T13:52:05 CET" duration-ms="11078" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aakhdhjddxgfpmla@gmailm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dsdd]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.fail(Assert.java:95)
at SignUpProcess.signUpFlowWithInvalidUser.signupNavigationWithInvalidUser(signUpFlowWithInvalidUser.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupNavigationWithInvalidUser -->
        <test-method is-config="true" signature="exit()[pri:0, instance:SignUpProcess.signUpFlowWithInvalidUser@43f02ef2]" started-at="2022-03-06T13:52:05 CET" name="exit" finished-at="2022-03-06T13:52:06 CET" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exit -->
      </class> <!-- SignUpProcess.signUpFlowWithInvalidUser -->
      <class name="SignUpProcess.signUpFlowWithNewUser">
        <test-method is-config="true" signature="initialize()[pri:0, instance:SignUpProcess.signUpFlowWithNewUser@5965d37]" started-at="2022-03-06T13:51:01 CET" name="initialize" finished-at="2022-03-06T13:51:03 CET" duration-ms="2442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="signupNavigationWithNewUser(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SignUpProcess.signUpFlowWithNewUser@5965d37]" started-at="2022-03-06T13:51:03 CET" name="signupNavigationWithNewUser" data-provider="getData" finished-at="2022-03-06T13:51:22 CET" duration-ms="19010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[djhsdjdd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid User]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupNavigationWithNewUser -->
      </class> <!-- SignUpProcess.signUpFlowWithNewUser -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
